unregister webadaptor dan unfederate
### jika tidak bisa
1. Go to https://SERVER.WEBGIS.LOKAL:6443/arcgis/admin
2. Navigate through Security > Config
   - Here you will see that it still reads 'ARCGIS_PORTAL'
3. Update this page so the 'Authentication Tier' is 'GIS_SERVER'
This should resolve the issue you are seeing and allow you to federate your server with the portal.
###

https://portal.webgis.lokal:7443/arcgis/portaladmin
https://server.webgis.lokal:6443/arcgis/admin

### remove images docker
docker compose up -d

portainer ==> WEBADAPTOR ==> network samakan
Container console ==> $ docker exec -it WEBADAPTOR /bin/bash
root@agsipsdh:/usr/local/tomcat#
# cd /tmp
tmp# ./as_wa.sh
tmp# ./ap_wa.sh

federate server
Service URL https://agsipsdh.ddns.net/server
Administration URL https://SERVER.WEBGIS.LOKAL:6443/arcgis

Reff:
Tomcat Server With LetsEncrypt
https://tecadmin.net/how-to-install-lets-encrypt-ssl-with-tomcat/
https://medium.com/@mashrur123/a-step-by-step-guide-to-securing-a-tomcat-server-with-letsencrypt-ssl-certificate-65cd26290b70
// https://www.nusa.id/knowledge-base/membangun-server-proxy-dengan-nginx-proxy-manager/
buat SSL => Let's Encrypt   ::: port 80, 443 dan 81 jangan aktif/sedang digunakan
$ mkdir nginx-proxy && cd nginx-proxy
$ vi docker-compose.yml
$ mkdir {data,letsencrypt}
$ docker network create npm-nw
$ docker-compose up -d
http://IP_Address:81
Silahkan login dengan kredensial default :
Email address: admin@example.com
Password: changeme
1. Add Proxy Host
Domain Names silahkan tambahkan domain yang sesuai dengan FQDN kemudian enter.
Isi bagian Forward Hostname dengan IP Address server nginx proxy manager.
Tambahkan Forward Port dengan nilai 81, dan enable Block Common Exploits.
2. Pada bagian SSL Certificate pilih Request a new SSL Certificate.
   Aktifkan pilihan Force SSL dan HTTP/2 Support.
   Isi email dengan email Anda dan centang Term of Service.

### convert Let's Encrypt certificate to pfx (tomcat)
$ wget https://raw.githubusercontent.com/klik-on/nginx-arcgis/main/certificate.zip
$ unzip certificate.zip
$ openssl pkcs12 -export -in fullchain.pem -inkey privkey.pem -out fullchain.pfx
Enter Export Password: 123456
Verifying - Enter Export Password: 123456
### atau ****
# Export PFX into /tmp/wildcard.pfx
$ openssl pkcs12 -export -out /tmp/wildcard.pfx -inkey privkey.pem -in cert.pem -certfile chain.pem
$ docker cp /tmp/wildcard.pfx WEBADAPTOR:/home

$ docker cp wildcard.pfx WEBADAPTOR:/home
# cd /usr/local/tomcat/conf/
# vi server.xml
  <Service name="Catalina">
   <Connector protocol="org.apache.coyote.http11.Http11NioProtocol"
    port="443" maxThreads="200"
    scheme="https" secure="true" SSLEnabled="true"
    keystoreFile="/home/wildcard.pfx" keystorePass="123456"
    clientAuth="false" sslProtocol="TLS" />

### NGINX
# vi /etc/nginx/sites-available/default
   ssl_certificate "/etc/letsencrypt/fullchain.pem";
   ssl_certificate_key "/etc/letsencrpt/privkey.pem";

#### Forward to HTTPS/SSL
# vi /usr/share/tomcat/conf/web.xml ==> tekan ]]
Tambahkan diakhir baris sebelum  tag </web-app>
    <security-constraint>
        <web-resource-collection>
        <web-resource-name>Automatic Forward to HTTPS/SSL
        </web-resource-name>
        <url-pattern>/*</url-pattern>
        </web-resource-collection>
        <user-data-constraint>
           <transport-guarantee>CONFIDENTIAL</transport-guarantee>
        </user-data-constraint>
    </security-constraint>
</web-app>
