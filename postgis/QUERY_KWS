-- Pindahkan Aktif Schema dari public ke datagis
ALTER ROLE anon SET search_path = datagis, public, storage, graphql_public ;
GRANT USAGE ON SCHEMA datagis TO anon;
GRANT SELECT, INSERT, UPDATE, DELETE ON ALL TABLES IN SCHEMA datagis TO anon;
GRANT USAGE, SELECT ON ALL SEQUENCES IN SCHEMA datagis TO anon;
ALTER DEFAULT PRIVILEGES IN SCHEMA datagis
GRANT SELECT, INSERT, UPDATE, DELETE ON TABLES TO anon;
ALTER DEFAULT PRIVILEGES IN SCHEMA datagis
GRANT USAGE, SELECT ON SEQUENCES TO anon;
-- Supabase-specific: publish schema to GraphQL engine & REST
-- Publish schema datagis ke GraphQL API
GRANT USAGE ON SCHEMA datagis TO postgres;
GRANT SELECT ON ALL TABLES IN SCHEMA datagis TO postgres;
ALTER DEFAULT PRIVILEGES IN SCHEMA datagis
GRANT SELECT ON TABLES TO postgres;


-- TOTAL Luas Fungsi Kawasan Hutan Tanpa Batas Admin
WITH kawasan AS (
  SELECT 
    a."FUNGSIKWS",
    a.geom,
    c."KD_KWS",
    c."FUNGSI_KWS",
    c."NOURUT_KWS"
  FROM 
    datagis."KWSHUTAN_AR_250K" a
  LEFT JOIN 
    datagis."KODE_KWS" c 
      ON a."FUNGSIKWS" = c."KD_KWS"
  WHERE 
    a.geom IS NOT NULL
)

-- Total per fungsi kawasan
SELECT 
  k."NOURUT_KWS", 
  k."FUNGSIKWS" AS "KODEKWS", 
  k."FUNGSI_KWS", 
  SUM(ST_Area(ST_Transform(k.geom, 54034))) / 10000 AS "LUAS_CEA_HA"
FROM kawasan k
GROUP BY 
  k."FUNGSIKWS", k."KD_KWS", k."FUNGSI_KWS", k."NOURUT_KWS"

UNION ALL

-- Grand total
SELECT 
  NULL AS "NOURUT_KWS",
  NULL AS "KODEKWS",
  'Grand Total' AS "FUNGSI_KWS",
  SUM(ST_Area(ST_Transform(k.geom, 54034))) / 10000 AS "LUAS_CEA_HA"
FROM kawasan k

ORDER BY "NOURUT_KWS" NULLS FIRST;


-- ### Atau
-- Versi Lengkap TOTAL KWS TANPA ADMIN
WITH data AS (
  -- Total per fungsi kawasan
  SELECT 
    c."FUNGSI_KWS"::text AS fungsikws,
    ROUND(SUM(ST_Area(ST_Transform(a.geom, 54034)))::numeric, 2) / 10000 AS luas_cea_ha
  FROM 
    "public".kwshutan_ar_250k a
    LEFT JOIN "KODE_KWS" c
      ON a.fungsikws = c."KD_KWS"
  WHERE 
    ST_IsValid(a.geom)
  GROUP BY 
    c."FUNGSI_KWS"

  UNION ALL

  -- Grand total
  SELECT 
    'TOTAL' AS fungsikws,
    ROUND(SUM(ST_Area(ST_Transform(geom, 54034)))::numeric, 2) / 10000 AS luas_cea_ha
  FROM 
   "public".kwshutan_ar_250k
  WHERE 
    ST_IsValid(geom)
)

SELECT * 
FROM data
ORDER BY 
  CASE 
    WHEN fungsikws = 'TOTAL' THEN 'ZZZ'
    ELSE fungsikws 
  END;


-- Luas Total KWS + ADMIN
WITH LuasKawasan AS (
  SELECT
    c."NOURUT_KWS",
    a."fungsikws" AS "KODEKWS",
    b."WADMPR",
    c."FUNGSI_KWS",
    SUM(
      ST_Area(
        ST_Transform(
          ST_Intersection(a.geom, b.geom), 
          54034                       -- Proyeksi ESRI CEA dengan satuan meter
        )
      )
    ) / 10000 AS "LUAS_CEA_HA"       -- Total luas dalam hektar
  FROM 
    "public".kwshutan_ar_250k a
  INNER JOIN 
    "datagis"."ADM_KAB_KOTA" b 
    ON ST_Intersects(a.geom, b.geom)  -- Sudah cukup tanpa && karena ST_Intersects mencakup itu
  LEFT JOIN 
    "datagis"."KODE_KWS" c 
    ON a."fungsikws" = c."KD_KWS"
  WHERE 
    ST_IsValid(a.geom) 
    AND ST_IsValid(b.geom)
    AND b."WADMPR" = 'Bali'
  GROUP BY 
    a."fungsikws",
    b."WADMPR",
    c."FUNGSI_KWS",
    c."NOURUT_KWS"
)

-- Query untuk hasil data per wilayah
SELECT 
  "NOURUT_KWS",
  "KODEKWS",
  "WADMPR",
  "FUNGSI_KWS",
  "LUAS_CEA_HA"
FROM 
  LuasKawasan

UNION ALL

-- Query untuk total luas
SELECT 
  NULL AS "NOURUT_KWS",  -- NULL untuk kolom NOURUT_KWS
  NULL AS "KODEKWS",
  NULL AS "WADMPR",
  'TOTAL LUAS' AS "FUNGSI_KWS",  -- Tulis "TOTAL LUAS" di kolom FUNGSI_KWS
  SUM("LUAS_CEA_HA") AS "LUAS_CEA_HA"
FROM 
  LuasKawasan;


-- ANALISA LUAS PENUTUPAN LAHAN PER PROVINSI & FUNGSI KAWASAN + GRAND TOTAL
WITH luas_per_provinsi AS (
  SELECT
    c."NOURUT_PL",                         
    a."pl2024_id" AS "KODEPL",             
    b."WADMPR",                             
    c."DESKRIPSI_PL",                       
    e."NOURUT_KWS",
    d."fungsikws" AS "KODEKWS",
    e."FUNGSI_KWS",
    SUM(
      ST_Area(
        ST_Intersection(
          ST_Intersection(
            ST_Transform(ST_MakeValid(a.geom), 54034), -- PL2024
            ST_Transform(ST_MakeValid(b.geom), 54034)  -- Provinsi/Kabupaten
          ),
          ST_Transform(ST_MakeValid(d.geom), 54034)    -- Fungsi Kawasan
        )
      )
    ) / 10000 AS "LUAS_CEA_HA"              
  FROM 
    datagis."PL2024_AR_250K" a
  INNER JOIN 
    datagis."ADM_KAB_KOTA" b
      ON ST_Intersects(a.geom, b.geom)
  INNER JOIN 
    "public".kwshutan_ar_250k d
      ON ST_Intersects(a.geom, d.geom) 
  LEFT JOIN 
    datagis."KODE_PL" c
      ON a."pl2024_id" = c."KD_PL"
  LEFT JOIN 
    datagis."KODE_KWS" e               
      ON d."fungsikws" = e."KD_KWS"
  WHERE 
    b."WADMPR" ILIKE '%Bali%'            
  GROUP BY 
    a."pl2024_id",
    b."WADMPR",
    c."DESKRIPSI_PL",
    c."NOURUT_PL",
    e."NOURUT_KWS",
    d."fungsikws",
    e."FUNGSI_KWS"
)
SELECT * FROM luas_per_provinsi
UNION ALL
SELECT
  NULL AS "NOURUT_PL",
  NULL AS "KODEPL",
  'GRAND TOTAL' AS "WADMPR",
  NULL AS "DESKRIPSI_PL",
  NULL AS "NOURUT_KWS",
  NULL AS "KODEKWS",
  NULL AS "FUNGSI_KWS",
  SUM("LUAS_CEA_HA") AS "LUAS_CEA_HA"
FROM luas_per_provinsi
ORDER BY 
  "NOURUT_PL" NULLS LAST,
  "NOURUT_KWS" NULLS LAST;


## CLIP UNTUK QGIS
SELECT 
  a.*,
  ST_Intersection(a.geom, b.geom) AS geom_clip
FROM 
  datagis."KWSHUTAN_AR_250K" a
JOIN 
  datagis."ADM_KAB_KOTA" b
    ON b."WADMPR" = 'Bali'          -- Filter untuk provinsi Bali
WHERE 
  a.geom IS NOT NULL 
  AND b.geom IS NOT NULL
  AND ST_Intersects(a.geom, b.geom)
