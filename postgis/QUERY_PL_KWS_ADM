-- ANALISA LUAS PERUNTUKAN LAHAN PER PROVINSI & FUNGSI KAWASAN + GRAND TOTAL
WITH luas_per_provinsi AS (
  SELECT
    c."NOURUT_PL",                         
    a."pl2024_id" AS "KODEPL",             
    b."WADMPR",                             
    c."DESKRIPSI_PL",                       
    e."NOURUT_KWS",
    d."fungsikws" AS "KODEKWS",
    e."FUNGSI_KWS",
    SUM(
      ST_Area(
        ST_Intersection(
          ST_Intersection(
            ST_Transform(ST_MakeValid(a.geom), 54034), -- PL2024
            ST_Transform(ST_MakeValid(b.geom), 54034)  -- Provinsi/Kabupaten
          ),
          ST_Transform(ST_MakeValid(d.geom), 54034)    -- Fungsi Kawasan
        )
      )
    ) / 10000 AS "LUAS_CEA_HA"              
  FROM 
    "PL2024_AR_250K" a
  INNER JOIN 
    "ADM_KAB_KOTA" b
      ON ST_Intersects(a.geom, b.geom)
  INNER JOIN 
    "KWSHUTAN_AR_250K" d
      ON ST_Intersects(a.geom, d.geom) 
  LEFT JOIN 
    "KODE_PL" c
      ON a."pl2024_id" = c."KD_PL"
  LEFT JOIN 
    "KODE_KWS" e               
      ON d."fungsikws" = e."KD_KWS"
  WHERE 
    b."WADMPR" ILIKE '%DKI%'                
  GROUP BY 
    a."pl2024_id",
    b."WADMPR",
    c."DESKRIPSI_PL",
    c."NOURUT_PL",
    e."NOURUT_KWS",
    d."fungsikws",
    e."FUNGSI_KWS"
)
SELECT * FROM luas_per_provinsi
UNION ALL
SELECT
  NULL AS "NOURUT_PL",
  NULL AS "KODEPL",
  'GRAND TOTAL' AS "WADMPR",
  NULL AS "DESKRIPSI_PL",
  NULL AS "NOURUT_KWS",
  NULL AS "KODEKWS",
  NULL AS "FUNGSI_KWS",
  SUM("LUAS_CEA_HA") AS "LUAS_CEA_HA"
FROM luas_per_provinsi
ORDER BY 
  "NOURUT_PL" NULLS LAST,
  "NOURUT_KWS" NULLS LAST;

### schema dari public diubah ke datagis
-- ANALISA LUAS PERUNTUKAN LAHAN PER PROVINSI & FUNGSI KAWASAN + GRAND TOTAL
WITH luas_per_provinsi AS (
  SELECT
    c."NOURUT_PL",                         
    a."pl2024_id" AS "KODEPL",             
    b."WADMPR",                             
    c."DESKRIPSI_PL",                       
    e."NOURUT_KWS",
    d."fungsikws" AS "KODEKWS",
    e."FUNGSI_KWS",
    SUM(
      ST_Area(
        ST_Intersection(
          ST_Intersection(
            ST_Transform(ST_MakeValid(a.geom), 54034), -- PL2024
            ST_Transform(ST_MakeValid(b.geom), 54034)  -- Provinsi/Kabupaten
          ),
          ST_Transform(ST_MakeValid(d.geom), 54034)    -- Fungsi Kawasan
        )
      )
    ) / 10000 AS "LUAS_CEA_HA"              
  FROM 
    datagis."PL2024_AR_250K" a
  INNER JOIN 
    datagis."ADM_KAB_KOTA" b
      ON ST_Intersects(a.geom, b.geom)
  INNER JOIN 
    datagis."KWSHUTAN_AR_250K" d
      ON ST_Intersects(a.geom, d.geom) 
  LEFT JOIN 
    datagis."KODE_PL" c
      ON a."pl2024_id" = c."KD_PL"
  LEFT JOIN 
    datagis."KODE_KWS" e               
      ON d."fungsikws" = e."KD_KWS"
  WHERE 
    b."WADMPR" ILIKE '%DKI%'                
  GROUP BY 
    a."pl2024_id",
    b."WADMPR",
    c."DESKRIPSI_PL",
    c."NOURUT_PL",
    e."NOURUT_KWS",
    d."fungsikws",
    e."FUNGSI_KWS"
)
SELECT * FROM luas_per_provinsi
UNION ALL
SELECT
  NULL AS "NOURUT_PL",
  NULL AS "KODEPL",
  'GRAND TOTAL' AS "WADMPR",
  NULL AS "DESKRIPSI_PL",
  NULL AS "NOURUT_KWS",
  NULL AS "KODEKWS",
  NULL AS "FUNGSI_KWS",
  SUM("LUAS_CEA_HA") AS "LUAS_CEA_HA"
FROM luas_per_provinsi
ORDER BY 
  "NOURUT_PL" NULLS LAST,
  "NOURUT_KWS" NULLS LAST;

-- Catatan
-- Daripada ILIKE '%DKI%', sebaiknya filter pakai kode provinsi jika tersedia:
-- Misalnya jika ada kolom b."KDPROV"
WHERE b."KDPROV" = '31'  -- 31 = DKI Jakarta

-- Tambah Index Spasial (Jika Belum Ada)
-- Untuk kinerja maksimal pada ST_Intersects dan ST_Intersection:
CREATE INDEX ON datagis."PL2024_AR_250K" USING GIST (geom);
CREATE INDEX ON datagis."ADM_KAB_KOTA" USING GIST (geom);
CREATE INDEX ON datagis."KWSHUTAN_AR_250K" USING GIST (geom);

