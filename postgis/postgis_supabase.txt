docker images supabase
docker pull supabase/studio:2025.08.11-sha-c538c4d
    container_name: supabase-studio
    image: supabase/studio:2025.08.11-sha-c538c4d
image: kong:2.8.1
    container_name: supabase-kong
    image: kong:2.8.1
docker pull supabase/gotrue:v2.178.0
    container_name: supabase-auth
    image: supabase/gotrue:v2.178.0
# image: postgrest/postgrest:v12.0.3 ***
    container_name: supabase-rest
    image: postgrest/postgrest:v12.0.3
docker pull supabase/realtime:v2.41.24
    container_name: realtime-dev.supabase-realtime
    image: supabase/realtime:v2.41.24
docker pull supabase/storage-api:v1.26.3
    container_name: supabase-storage
    image: supabase/storage-api:v1.26.4
docker pull darthsim/imgproxy:v3.29.1
    container_name: supabase-imgproxy
    image: darthsim/imgproxy:v3.29.1
docker pull supabase/postgres-meta:v0.91.5
    container_name: supabase-meta
    image: supabase/postgres-meta:v0.91.5
docker pull supabase/edge-runtime:v1.68.3
    container_name: supabase-edge-functions
    image: supabase/edge-runtime:v1.68.3
# image: supabase/logflare:1.14.2  == 1.15.0 ***
    container_name: supabase-analytics
    image: supabase/logflare:1.15.0
docker pull supabase/postgres:15.8.1.129
    container_name: supabase-db
    image: supabase/postgres:15.8.1.130
# docker pull timberio/vector:0.28.1-alpine ***
    container_name: supabase-vector
    image: timberio/vector:0.28.1-alpine
docker pull supabase/supavisor:2.6.1
    container_name: supabase-pooler
    image: supabase/supavisor:2.6.1


####  Add ArcGIS st_geometry
# vi a.sh
# Cek port yang digunakan
# sudo lsof -i -P -n | grep LISTEN
# sudo netstat -tuln | grep LISTEN
# sudo ss -tulwn
# Cek Lokasi lib PostgreSQL
# docker exec -it `docker ps | grep supabase-db | cut -b -12` /bin/bash
# pg_config --pkglibdir
# /nix/store/bz5c0h2y1z597wxz5z5szc7rkqnfsgwd-postgresql-15.8-lib/lib
# chmod 555 /nix/store/bz5c0h2y1z597wxz5z5szc7rkqnfsgwd-postgresql-15.8-lib/lib/{st_geometry.so PGSQLEngine.so}
# chown root:root /nix/store/bz5c0h2y1z597wxz5z5szc7rkqnfsgwd-postgresql-15.8-lib/lib/lib/st_geometry.so
# ls -l /nix/store/bz5c0h2y1z597wxz5z5szc7rkqnfsgwd-postgresql-15.8-lib/libst_geometry.so

# lib ArcGIS Desktop 10.8.2 ==> POSTGRESQL 12
# lib ArcGIS PRO 3.4 ==> POSTGRESQL 15

for pg_ags in *.so; do
  docker cp $pg_ags supabase-db:/nix/store/bz5c0h2y1z597wxz5z5szc7rkqnfsgwd-postgresql-15.8-lib/lib
done
#####


# Stop docker and remove volumes:
docker compose down -v

# Remove Postgres data:
rm -rf volumes/db/data/

Install supabase
https://www.digitalocean.com/community/tutorials/how-to-install-and-use-docker-compose-on-ubuntu-22-04
https://www.howtoforge.com/how-to-install-supabase-on-debian-11/
https://supabase.com/docs/guides/self-hosting/docker#dashboard-authentication

Fix
error: git-remote-https died of signal 4
$ sudo GNUTLS_CPUID_OVERRIDE=0x1 
$ apt-get update

you need to add ~/.bashrc with this
$ export  GNUTLS_CPUID_OVERRIDE=0x1
$ git clone --depth 1 https://github.com/supabase/supabase

### Isian .env
https://zeabur.com/templates/YVSAU4

### CEK File  .env
POSTGRES_PASSWORD=password00
JWT_SECRET=1EKfEbmPOw45QHbYKzuZyfbBXUJLx83D1NTEP3sB
ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2xlIjoiYW5vbiIsImlzcyI6InN1cGFiYXNlIiwiaWF0IjoxNzUxMzAyODAwLCJleHAiOjE5MDkwNjkyMDB9.5B3KqroqKZUnXyjJg99AtjSjGci-wKqJtH7LWCz7x2U
SERVICE_ROLE_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2xlIjoic2VydmljZV9yb2xlIiwiaXNzIjoic3VwYWJhc2UiLCJpYXQiOjE3NTEzMDI4MDAsImV4cCI6MTkwOTA2OTIwMH0.5Vn4H5dPusgKhVV8ZYP-xOdMNBmirCRR2GDjmoLclGo
DASHBOARD_USERNAME=supabase
DASHBOARD_PASSWORD=password001
SECRET_KEY_BASE=eKGKKRi8eXEs1hGBnfYZhueVqeMisOINDNhy4624ym9pEEhtsqul80NJ0H8Qkrik
VAULT_ENC_KEY=YpDzfO9z11XE8hlE95SleWGHPgyqKlTP

## General
SITE_URL=http://172.16.2.122:3000
ADDITIONAL_REDIRECT_URLS=
JWT_EXPIRY=3600
DISABLE_SIGNUP=false
API_EXTERNAL_URL=http://172.16.2.122:8000

## Email auth
ENABLE_EMAIL_SIGNUP=true
ENABLE_EMAIL_AUTOCONFIRM=false
SMTP_ADMIN_EMAIL=admin@example.com
SMTP_HOST=mail.menlhk.go.id
SMTP_PORT=465
SMTP_USER=webgis@menlhk.go.id
SMTP_PASS=pktl123
SMTP_SENDER_NAME=SupabaseAdmin
ENABLE_ANONYMOUS_USERS=false

# Database - You can change these to any PostgreSQL database that has logical replication enabled.
############

POSTGRES_HOST=db
POSTGRES_DB=postgres
POSTGRES_PORT=5432
# default user is postgres

# Supavisor -- Database pooler
############
# Port Supavisor listens on for transaction pooling connections
POOLER_PROXY_PORT_TRANSACTION=6543
# Maximum number of PostgreSQL connections Supavisor opens per pool
POOLER_DEFAULT_POOL_SIZE=20
# Maximum number of client connections Supavisor accepts per pool
POOLER_MAX_CLIENT_CONN=100
# Unique tenant identifier
POOLER_TENANT_ID=67888 **** username : postgres.67888
# Pool size for internal metadata storage used by Supavisor
# This is separate from client connections and used only by Supavisor itself
POOLER_DB_POOL_SIZE=5

Akses PostgreSQL
host      : POSTGRES_HOST=db
database  : POSTGRES_DB=postgres
username  : POOLER_TENANT_ID=67888 **** username : postgres.67888
password  :  POSTGRES_PASSWORD=password00
port      : POSTGRES_PORT=5432


############
# API - Configuration for PostgREST.
############
# Stop docker and remove volumes:
docker compose down -v
# edit .env
PGRST_DB_SCHEMAS=public,storage,graphql_public,datagis
docker compose up -d

## setting waktu
alter database postgres

set timezone to 'Asia/Jakarta';

https://supabase.com/docs/guides/api/using-custom-schemas

CREATE SCHEMA datagis;
ALTER ROLE anon SET search_path = datagis, public, storage, graphql_public;
GRANT USAGE ON SCHEMA datagis TO anon;
GRANT SELECT, INSERT, UPDATE, DELETE ON ALL TABLES IN SCHEMA datagis TO anon;
GRANT USAGE, SELECT ON ALL SEQUENCES IN SCHEMA datagis TO anon;
ALTER DEFAULT PRIVILEGES IN SCHEMA datagis
GRANT SELECT, INSERT, UPDATE, DELETE ON TABLES TO anon;
ALTER DEFAULT PRIVILEGES IN SCHEMA datagis
GRANT USAGE, SELECT ON SEQUENCES TO anon;
-- Supabase-specific: publish schema to GraphQL engine & REST
- Publish schema datagis ke GraphQL API
GRANT USAGE ON SCHEMA datagis TO postgres;
GRANT SELECT ON ALL TABLES IN SCHEMA datagis TO postgres;
ALTER DEFAULT PRIVILEGES IN SCHEMA datagis
GRANT SELECT ON TABLES TO postgres;

### test API
GET https://xyzcompany.supabase.co/rest/v1/bangunan
GET https://domain/supabase-proxy/api/bangunan


## Hapus SCHEMA
drop schema datagis cascade;

## Hapus Tabel dalam schema
do $$ declare
         r record;
begin
        for r in (select tablename from pg_tables where schemaname = 'datagis') loop
        execute 'drop table if exists ' || quote_ident(r.tablename) || ' cascade';
    end loop;
end $$;

### Akses SCHEMA
# Append /rest/v1/ to your URL, and then use the table name as the route.

# for GET or HEAD request use Accept-Profile
curl '<SUPABASE_URL>/rest/v1/todos' \
  -H "apikey: <SUPABASE_ANON_KEY>" \
  -H "Authorization: Bearer <SUPABASE_ANON_KEY>" \
  -H "Accept-Profile: myschema"

# for POST, PATCH, PUT and DELETE Request use Content-Profile
curl -X POST '<SUPABASE_URL>/rest/v1/todos' \
  -H "apikey: <SUPABASE_ANON_KEY>" \
  -H "Authorization: Bearer <SUPABASE_ANON_KEY>" \
  -H "Content-Type: application/json" \
  -H "Content-Profile: myschema" \
  -d '{"column_name": "value"}'


curl '172.16.2.122:8000/rest/v1/RUMPIN' \
  -H "apikey: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2xlIjoiYW5vbiIsImlzcyI6InN1cGFiYXNlIiwiaWF0IjoxNzUxMzAyODAwLCJleHAiOjE5MDkwNjkyMDB9.5B3KqroqKZUnXyjJg99AtjSjGci-wKqJtH7LWCz7x2U" \
  -H "Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2xlIjoiYW5vbiIsImlzcyI6InN1cGFiYXNlIiwiaWF0IjoxNzUxMzAyODAwLCJleHAiOjE5MDkwNjkyMDB9.5B3KqroqKZUnXyjJg99AtjSjGci-wKqJtH7LWCz7x2U" \
  -H "Accept-Profile: public"


curl '172.16.2.122:8000/rest/v1/RUMPIN2' \
  -H "apikey: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2xlIjoiYW5vbiIsImlzcyI6InN1cGFiYXNlIiwiaWF0IjoxNzUxMzAyODAwLCJleHAiOjE5MDkwNjkyMDB9.5B3KqroqKZUnXyjJg99AtjSjGci-wKqJtH7LWCz7x2U" \
  -H "Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2xlIjoiYW5vbiIsImlzcyI6InN1cGFiYXNlIiwiaWF0IjoxNzUxMzAyODAwLCJleHAiOjE5MDkwNjkyMDB9.5B3KqroqKZUnXyjJg99AtjSjGci-wKqJtH7LWCz7x2U" \
  -H "Accept-Profile: datagis"

####  POSTGIS  Luasan ## https://epsg.io/54034
SELECT * FROM extensions.spatial_ref_sys WHERE  auth_name='ESRI'
SELECT * FROM extensions.spatial_ref_sys WHERE auth_srid=54034
SELECT geom, ST_Area(geom::geography), ST_Area(ST_Transform(geom,54034))/10000 as "LUAS_CEA"
from "RUMPIN"

##
SELECT "WADMPR", ST_Area(geom::geography), ST_Area(ST_Transform(geom,54034))/10000 as "LUAS_CEA"
from "ADM_KAB_KOTA" where "WADMPR"='Jawa Barat';

## Luas TOTAL
SELECT sum(ST_Area(ST_Transform(geom,54034)))/10000 as "LUAS_CEA"
            from "ADM_KAB_KOTA";

SELECT "WADMPR" ,sum(ST_Area(ST_Transform(geom,54034)))/10000 as "LUAS_CEA"
            from "ADM_KAB_KOTA" group by "WADMPR";
## ROUND
SELECT "WADMPR" ,round(sum(ST_Area(ST_Transform(geom,54034))))/10000 as "LUAS_CEA"
            from "ADM_KAB_KOTA" group by "WADMPR";

SELECT "FUNGSIKWS" ,sum(ST_Area(ST_Transform(geom,54034)))/10000 as "LUAS_CEA"
            from "KWSHUTAN_AR_250K_072024" group by "FUNGSIKWS";
####

curl '172.16.2.122:8000/rest/v1/UKL_UPL_AR_50K' \
  -H "apikey: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2xlIjoiYW5vbiIsImlzcyI6InN1cGFiYXNlIiwiaWF0IjoxNzUxMzAyODAwLCJleHAiOjE5MDkwNjkyMDB9.5B3KqroqKZUnXyjJg99AtjSjGci-wKqJtH7LWCz7x2U" \
  -H "Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2xlIjoiYW5vbiIsImlzcyI6InN1cGFiYXNlIiwiaWF0IjoxNzUxMzAyODAwLCJleHAiOjE5MDkwNjkyMDB9.5B3KqroqKZUnXyjJg99AtjSjGci-wKqJtH7LWCz7x2U" \
  -H "Accept-Profile: datagis"

curl '172.16.2.122:8000/rest/v1/INDIKATIF_PPTPKH_REVISI_II' \
  -H "apikey: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2xlIjoiYW5vbiIsImlzcyI6InN1cGFiYXNlIiwiaWF0IjoxNzUxMzAyODAwLCJleHAiOjE5MDkwNjkyMDB9.5B3KqroqKZUnXyjJg99AtjSjGci-wKqJtH7LWCz7x2U" \
  -H "Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2xlIjoiYW5vbiIsImlzcyI6InN1cGFiYXNlIiwiaWF0IjoxNzUxMzAyODAwLCJleHAiOjE5MDkwNjkyMDB9.5B3KqroqKZUnXyjJg99AtjSjGci-wKqJtH7LWCz7x2U" \
  -H "Accept-Profile: datagis"

















