-- Buat SCHEMA
CREATE SCHEMA kodefikasi;
ALTER SCHEMA kodefikasi OWNER TO postgres;
ALTER TABLE datagis."KODE_PL" SET SCHEMA kodefikasi;

-- Buat DISSOLVE
CREATE TABLE datagis.ADM_PROVINSI_CLEAN AS
SELECT
  "WADMPR" AS nama_provinsi,
  ST_Union(ST_MakeValid(geom)) AS geom
FROM datagis."ADM_KAB_KOTA"
GROUP BY "WADMPR";

-- Buat CLIP
-- Drop tabel jika sudah ada, kemudian buat ulang tabel
DROP TABLE IF EXISTS datagis.PL2020_BOGOR;

-- CLIP untuk PL 2020
CREATE TABLE datagis.PL2020_BOGOR AS (
  SELECT
    -- a.pl2020_id::text AS pl_id,
    a.pl2020_id,
    adm."WADMKK",
    ST_Intersection(a.geom, adm.geom) AS geom -- Menambahkan alias untuk hasil irisan geometri
  FROM 
    datagis."PL2020_AR_250K" a
  INNER JOIN datagis."ADM_KAB_KOTA" adm
    ON ST_Intersects(a.geom, adm.geom)
  WHERE adm."WADMKK" = 'Bogor'
);

-- Buat Deskripdi dari TABEL
DO $$
DECLARE
    tanggal text := to_char(current_date, 'YYYY-MM-DD');
BEGIN
    EXECUTE format('COMMENT ON TABLE datagis."BTS_LAUT_TERITORIAL" IS %L', 
                   'Layer hasil ekspor dari sistem per tanggal ' || tanggal);
END
$$;


-- Cek OVERLAP ###
-- Drop tabel jika sudah ada
DROP TABLE IF EXISTS datagis.cektopology;

-- Membuat ulang tabel cektopology dengan hasil overlap dan geometri tumpang tindih
CREATE TABLE datagis.cektopology AS
SELECT a.id AS id_a, b.id AS id_b, ST_Intersection(a.geom, b.geom) AS geom
FROM datagis."PBPH_DEFINITIF" a, datagis."PBPH_DEFINITIF" b
WHERE ST_Overlaps(a.geom, b.geom)
  AND a.id != b.id;


