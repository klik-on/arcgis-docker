$ docker exec -it gdal-3113-postgis /bin/bash
# ogrinfo KWSHUTAN_AR_250K_062025.gdb
INFO: Open of `KWSHUTAN_AR_250K_062025.gdb'
      using driver `OpenFileGDB' successful.
Layer: KWSHUTAN_AR_250K_062025 (Multi Polygon)

# ogr2ogr -f "PostgreSQL" \
  PG:"host=192.168.2.122 port=5432 dbname=postgres user=postgres.67888 password=password00" \
  KWSHUTAN_AR_250K_062025.gdb \
  -nlt MULTIPOLYGON \
  -nln "KWSHUTAN_AR_250K" \
  -dim 2 \
  -lco SCHEMA=datagis \
  -lco GEOMETRY_NAME=geom \
  -lco FID=id \
  -lco SPATIAL_INDEX=GIST \
  -lco LAUNDER=NO \
  -t_srs EPSG:4326 \
  -overwrite \
  -progress \
  --config OGR_OPENFILEGDB_METHOD SKIP \
  --config OGR_ENABLE_CURVE_REDUCTION YES \
  --config OGR_FORCE_GML_MULTISURFACE_AS_MULTIPOLYGON YES

## CEK prompt 
$ docker exec -it supabase-db /bin/bash
root@ef3592318956:/# hostname
ef3592318956
# psql -h ef3592318956 -U postgres -d postgres -p 5432
psql (15.14)
Type "help" for help.
postgres=>

atau
$ vi konek_db.sh
#!/bin/bash
HOSTNAME=$(docker inspect --format '{{ .Config.Hostname }}' supabase-db)
# Menambahkan direktori psql ke PATH
# which psql
# export PATH=$PATH:/root/.nix-profile/bin
docker exec -it supabase-db psql -h "$HOSTNAME" -U postgres -d postgres -p 5432


postgres=> c postgres
postgres-> \dn
            List of schemas
        Name        |       Owner
--------------------+-------------------
 datagis            | supabase_admin

postgres-> \dt datagis.*
                         List of relations
 Schema  |              Name              | Type  |     Owner
---------+--------------------------------+-------+----------------
 datagis | ADM_KAB_KOTA                   | table | postgres
 datagis | BTS_LAUT_TERITORIAL            | table | postgres
 datagis | KODE_KWS                       | table | supabase_admin
 datagis | KODE_PL                        | table | supabase_admin
 datagis | KWSHUTAN_AR_250K               | table | postgres
 datagis | LAHAN_KRITIS_AR_50K_291124     | table | postgres
(6 rows)

### Cek Invalid
postgres=> SELECT COUNT(*) FROM datagis."LAHAN_KRITIS_AR_50K_291124" WHERE NOT ST_IsValid(geom);
NOTICE:  Ring Self-intersection at or near point 104.06338945000005 -5.291651892999937
 count
-------
  1577
(1 row)

postgres=>
-- CEK dan Perbaiki Valid GEOM
UPDATE datagis."LAHAN_KRITIS_AR_50K_291124"
SET geom = ST_Multi(ST_CollectionExtract(ST_MakeValid(geom), 3))  -- 3 = Polygon
WHERE NOT ST_IsValid(geom);

postgres=> SELECT COUNT(*) FROM datagis."LAHAN_KRITIS_AR_50K_291124" WHERE NOT ST_IsValid(geom);
 count
-------
     0
(1 row)

postgres=>
-- CEK  pastikan semua bertipe MultiPolygon
SELECT DISTINCT GeometryType(geom) FROM datagis."LAHAN_KRITIS_AR_50K_291124";

geometrytype
--------------
 MULTIPOLYGON
(1 row)


### PostGIS to GDB
ogr2ogr -f "OpenFileGDB" \
  ADM_KAB_KOTA.gdb \
  PG:"host=172.16.2.122 port=5432 dbname=postgres user=postgres.67888 password=password00 " \
  datagis."ADM_KAB_KOTA" \
  -nln ADM_KAB_KOTA \
  -dim 2 \
  -t_srs EPSG:4326 \
  -overwrite \
  -progress \
  --config OGR_OPENFILEGDB_METHOD SKIP \
  --config OGR_ENABLE_CURVE_REDUCTION YES \
  --config OGR_FORCE_GML_MULTISURFACE_AS_MULTIPOLYGON YES


# ## Menggumakan script untuk banyak tabel dalam satu GDB
#!/bin/bash

# Konfigurasi koneksi Postgres
PG_HOST="172.16.2.1"
PG_PORT="5432"
PG_DB="postgres"
PG_USER="postgres.67888"
PG_PASS="password00"
PG_SCHEMA="datagis"

# Folder output FileGDB
OUTPUT_GDB="ADM_KAB_KOTA.gdb"

# Daftar tabel yang mau diekspor (sesuaikan)
TABLES=(
  "ADM_KAB_KOTA"
  "TABEL_LAIN1"
  "TABEL_LAIN2"
  "TABEL_LAIN3"
)

# Export satu-satu
for TABLE in "${TABLES[@]}"
do
  echo "Exporting $TABLE ..."
  
  # Untuk export pertama kali, buat overwrite, untuk berikutnya append
  if [ -d "$OUTPUT_GDB" ]; then
    # Folder .gdb sudah ada, append layer
    ogr2ogr -f "OpenFileGDB" "$OUTPUT_GDB" \
      PG:"host=$PG_HOST port=$PG_PORT dbname=$PG_DB user=$PG_USER password=$PG_PASS" \
      "$PG_SCHEMA.$TABLE" \
      -nln "$TABLE" \
      -dim 2 \
      -t_srs EPSG:4326 \
      -update -append \
      --config OGR_OPENFILEGDB_METHOD SKIP \
      --config OGR_ENABLE_CURVE_REDUCTION YES \
      --config OGR_FORCE_GML_MULTISURFACE_AS_MULTIPOLYGON YES

  else
    # Folder .gdb belum ada, buat baru dengan overwrite
    ogr2ogr -f "OpenFileGDB" "$OUTPUT_GDB" \
      PG:"host=$PG_HOST port=$PG_PORT dbname=$PG_DB user=$PG_USER password=$PG_PASS" \
      "$PG_SCHEMA.$TABLE" \
      -nln "$TABLE" \
      -dim 2 \
      -t_srs EPSG:4326 \
      -overwrite \
      --config OGR_OPENFILEGDB_METHOD SKIP \
      --config OGR_ENABLE_CURVE_REDUCTION YES \
      --config OGR_FORCE_GML_MULTISURFACE_AS_MULTIPOLYGON YES
  fi

done

echo "Export selesai!"

