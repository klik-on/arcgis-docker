-- Index ini mempercepat operasi spasial seperti ST_Transform dan kalkulasi area.
CREATE INDEX IF NOT EXISTS idx_kwshutan_geom ON "KWSHUTAN_AR_250K" USING GIST(geom);

-- cek Index
SELECT indexname
FROM pg_indexes
WHERE tablename = 'KWSHUTAN_AR_250K'
  AND indexname = 'idx_kwshutan_geom';

-- Sebelum update, pastikan backup data karena perbaikan geometri bisa merubah bentuk asli.
-- Gunakan ST_CollectionExtract() untuk mengeluarkan bagian Polygon atau MultiPolygon dari hasil ST_MakeValid():
UPDATE "KWSHUTAN_AR_250K"
SET geom = ST_Multi(ST_CollectionExtract(ST_MakeValid(geom), 3))  -- 3 = Polygon
WHERE NOT ST_IsValid(geom);

-- Setelah update, pastikan semua geometri valid:
SELECT COUNT(*) FROM "KWSHUTAN_AR_250K" WHERE NOT ST_IsValid(geom);

-- Dan pastikan semua bertipe MultiPolygon:
SELECT DISTINCT GeometryType(geom) FROM "KWSHUTAN_AR_250K";

-- Test Luas total
SELECT 
  fungsikws,
  SUM(ST_Area(ST_Transform(geom, 54034))) / 10000 AS luas_cea_ha
FROM 
  "KWSHUTAN_AR_250K"
WHERE 
  ST_IsValid(geom)
GROUP BY 
  fungsikws
ORDER BY 
  fungsikws;

-- Versi Lengkap
WITH data AS (
  -- Total per fungsi kawasan
  SELECT 
    fungsikws::text,
    ROUND(SUM(ST_Area(ST_Transform(geom, 54034)))::numeric, 2) / 10000 AS luas_cea_ha
  FROM 
    "KWSHUTAN_AR_250K"
  WHERE 
    ST_IsValid(geom)
  GROUP BY 
    fungsikws

  UNION ALL

  -- Grand total
  SELECT 
    'TOTAL' AS fungsikws,
    ROUND(SUM(ST_Area(ST_Transform(geom, 54034)))::numeric, 2) / 10000 AS luas_cea_ha
  FROM 
    "KWSHUTAN_AR_250K"
  WHERE 
    ST_IsValid(geom)
)

SELECT * 
FROM data
ORDER BY 
  CASE 
    WHEN fungsikws = 'TOTAL' THEN 'ZZZ'
    ELSE fungsikws 
  END;



-- Luas Fungsi Kawasan Hutan  Tanpa Batas Admin ####
SELECT 
  c."NOURUT_KWS",                   -- Urutan untuk pengurutan  Tabel KODE_KWS
  a."FUNGSIKWS" AS "KODEKWS",       -- Kode fungsi kawasan IGT KWS
  c."FUNGSI_KWS",                   -- Nama fungsi kawasan Tabel KODE_KWS
  SUM(
    ST_Area(
      ST_Transform(a.geom, 54034)   -- Proyeksi  ESRI CEA dengan satuan meter
    )
  ) / 10000 AS "LUAS_CEA_HA"        -- Total luas dalam hektar
FROM 
  "KWSHUTAN_AR_250K_072024" a        -- Tabel Data IGT KWS
LEFT JOIN 
  "KODE_KWS" c                        -- Tabel Kodefikasi KODE_KWS
    ON a."FUNGSIKWS" = c."KD_KWS"
WHERE 
  a.geom IS NOT NULL                   -- hanya geometri yang valid (tidak kosong) yang dihitung
GROUP BY 
  a."FUNGSIKWS", c."KD_KWS", c."FUNGSI_KWS", c."NOURUT_KWS"
ORDER BY
  c."NOURUT_KWS"


-- Analisa Luas Kawasan Hutan Provinsi + Join Kodefiksi  ####
SELECT
  c."NOURUT_KWS",
  a."FUNGSIKWS" AS "KODEKWS",
  b."WADMPR",
  c."FUNGSI_KWS",
  SUM(
    ST_Area(
      ST_Transform(
        ST_Intersection(a.geom, b.geom), 
        54034                       -- Proyeksi ESRI CEA dengan satuan meter
      )
    )
  ) / 10000 AS "LUAS_CEA_HA"       -- Total luas dalam hektar
FROM 
  "KWSHUTAN_AR_250K_072024" a
INNER JOIN 
  "ADM_KAB_KOTA" b 
   --  ON a.geom && b.geom AND ST_Intersects(a.geom, b.geom)   -- bounding box filter dulu
    ON ST_Intersects(a.geom, b.geom)  -- Sudah cukup tanpa && karena ST_Intersects mencakup itu
LEFT JOIN 
  "KODE_KWS" c 
    ON a."FUNGSIKWS" = c."KD_KWS"
WHERE 
  ST_IsValid(a.geom) 
  AND ST_IsValid(b.geom)
  AND b."WADMPR" = 'Bali'
GROUP BY 
  a."FUNGSIKWS",
  b."WADMPR",
  c."FUNGSI_KWS",
  c."NOURUT_KWS"
ORDER BY 
  c."NOURUT_KWS";


-- QUERY 3 TABEL DENGAN JOIN KODE FUNGSI ####
SELECT 
    a.nkws,
    b."FUNGSIKWS",
    c."WADMPR",
    c."WADMKK",
    k."FUNGSI_KWS",              -- kolom dari kode_kws
    SUM(
        ST_Area(
            ST_Transform(
                ST_MakeValid(
                    ST_Intersection(
                        ST_Intersection(a.geom, c.geom),
                        b.geom
                    )
                ),
                54034
            )
        )
    ) / 10000 AS luas_ha
FROM "RUMPIN" a
JOIN "ADM_KAB_KOTA" c 
    ON ST_Intersects(a.geom, c.geom)
JOIN "KWSHUTAN_AR_250K_072024" b 
    ON ST_Intersects(ST_Intersection(a.geom, c.geom), b.geom)
JOIN "KODE_KWS" k                      
    ON b."FUNGSIKWS" = k."KD_KWS"      
WHERE ST_Intersection(ST_Intersection(a.geom, c.geom), b.geom) IS NOT NULL
GROUP BY a.nkws, b."FUNGSIKWS", c."WADMPR", c."WADMKK", k."FUNGSI_KWS"
ORDER BY luas_ha DESC;

--- Analisa Luasan PL di RUMPIN dengan KodePL
SELECT
  c."NOURUT_PL",     -- Nomor urut dari master KODE_PL
  c."DESKRIPSI_PL",
  COALESCE(c."DESKRIPSI_PL", 'TIDAK DIKETAHUI') AS "DESKRIPSI_PL", 
  pl."pl2024_id",    -- Kode PL dari data PL2024
  r."nkws",          -- Nama wilayah dari RUMPIN

  SUM(
    ST_Area(
      ST_Transform(
        ST_Intersection(pl.geom, r.geom),
        54034                                   -- Cylindrical Equal Area projection
      )
    )
  ) / 10000 AS "LUAS_CEA_HA"                    -- Luas dalam hektar
FROM 
  "PL2024_AR_250K" pl
JOIN 
  "RUMPIN" r
    ON ST_Intersects(pl.geom, r.geom)
LEFT JOIN 
  "KODE_PL" c
    ON pl."pl2024_id" = c."KD_PL"
--WHERE 
 -- ST_IsValid(pl.geom) AND ST_IsValid(r.geom) -- Hanya geom yg valid saja, akan beda jika digunakan 
 -- r."nkws" = 'RUMPIN'                        -- Filter wilayah, pastikan nama sesuai data
GROUP BY 
  pl."pl2024_id",
  r."nkws",
  c."NOURUT_PL",
  c."DESKRIPSI_PL"
ORDER BY 
  c."NOURUT_PL";

--- Analisa Luasan KWS di RUMPIN dengan KodeKWS
SELECT
  c."NOURUT_KWS",     -- Nomor urut dari master KODE_PL
  c."FUNGSI_KWS",
  COALESCE(c."FUNGSI_KWS", 'TIDAK DIKETAHUI') AS "FUNGSI_KWS",                            
  kws."FUNGSIKWS",    -- Kode KWS dari data KWS
  r."nkws",          -- Nama wilayah dari RUMPIN

  SUM(
    ST_Area(
      ST_Transform(
        ST_Intersection(kws.geom, r.geom),
        54034                                   -- Cylindrical Equal Area projection
      )
    )
  ) / 10000 AS "LUAS_CEA_HA"                    -- Luas dalam hektar
FROM 
  "KWSHUTAN_AR_250K_072024" kws
JOIN 
  "RUMPIN" r
    ON ST_Intersects(kws.geom, r.geom)
LEFT JOIN 
  "KODE_KWS" c
    ON kws."FUNGSIKWS" = c."KD_KWS"
--WHERE 
 -- ST_IsValid(kws.geom) AND ST_IsValid(r.geom) -- Hanya geom yg valid saja, akan beda jika digunakan 
 -- r."nkws" = 'RUMPIN'                        -- Filter wilayah, pastikan nama sesuai data
GROUP BY 
  kws."FUNGSIKWS",
  r."nkws",
  c."NOURUT_KWS",
  c."FUNGSI_KWS"
ORDER BY 
  c."NOURUT_KWS";

-- Grand TOTAL Luas Kawasan Hutan Provinsi CEA
SELECT
  c."NOURUT_KWS",
  a.fungsikws AS "KODEKWS",
  b."WADMPR",
  c."FUNGSI_KWS",
  SUM(
    ST_Area(
      ST_Transform(
        ST_Intersection(a.geom, b.geom), 
        54034                       -- Proyeksi ESRI CEA dengan satuan meter
      )
    )
  ) / 10000 AS "LUAS_CEA_HA",       -- Total luas dalam hektar
  (SELECT SUM(
        ST_Area(
          ST_Transform(
            ST_Intersection(a.geom, b.geom), 
            54034
          )
        )
      ) / 10000
   FROM 
      "KWSHUTAN_AR_250K" a
   INNER JOIN 
      "ADM_KAB_KOTA" b 
      ON ST_Intersects(a.geom, b.geom)
   LEFT JOIN 
      "KODE_KWS" c 
      ON a.fungsikws = c."KD_KWS"
   WHERE 
      ST_IsValid(a.geom) 
      AND ST_IsValid(b.geom)
      AND b."WADMPR" = 'Kalimantan Tengah') AS "GRAND_TOTAL_LUAS_CEA_HA"
FROM 
  "KWSHUTAN_AR_250K" a
INNER JOIN 
  "ADM_KAB_KOTA" b 
   ON ST_Intersects(a.geom, b.geom)  -- Sudah cukup tanpa && karena ST_Intersects mencakup itu
LEFT JOIN 
  "KODE_KWS" c 
    ON a.fungsikws = c."KD_KWS"
WHERE 
  ST_IsValid(a.geom) 
  AND ST_IsValid(b.geom)
  AND b."WADMPR" = 'Kalimantan Tengah'
GROUP BY 
  a.fungsikws,
  b."WADMPR",
  c."FUNGSI_KWS",
  c."NOURUT_KWS"
ORDER BY 
  c."NOURUT_KWS";



#### upload GDB to postgis menggunakan ogr2ogr
geom == shape
cek type
SELECT column_name, udt_name
FROM information_schema.columns
WHERE table_name = 'PL2024_AR_250K';


SELECT 
  c."NOURUT_PL",                   -- Urutan untuk pengurutan Tabel KODE_KWS
  a."pl2024_id" AS "KODEPL",       -- Kode fungsi kawasan IGT KWS
  c."DESKRIPSI_PL",                -- Nama fungsi kawasan Tabel KODE_KWS
  SUM(ST_Area(ST_Transform(a.shape, 54034))) / 10000 AS "LUAS_CEA_HA"  -- Total luas dalam hektar
FROM 
  "PL2024_AR_250K" a               -- Tabel Data IGT KWS
LEFT JOIN 
  "KODE_PL" c                      -- Tabel Kodefikasi KODE_KWS
    ON a."pl2024_id" = c."KD_PL"
WHERE 
  a.shape IS NOT NULL               -- hanya geometri yang valid (tidak kosong) yang dihitung
GROUP BY 
  a."pl2024_id", c."KD_PL", c."NOURUT_PL", c."DESKRIPSI_PL"  -- Menambahkan kolom yang relevan di GROUP BY
ORDER BY 
  c."NOURUT_PL";                   -- Urutkan berdasarkan NOURUT_PL


-- Analisa Luas PL Provinsi + Join Kodefiksi  ####
SELECT
  c."NOURUT_PL",
  a."pl2024_id" AS "KODEPL",
  b."WADMPR",
  c."DESKRIPSI_PL",
  SUM(
    ST_Area(
      ST_Transform(
        ST_Intersection(a.shape, b.geom), 
        54034                       -- Proyeksi ESRI CEA dengan satuan meter
      )
    )
  ) / 10000 AS "LUAS_CEA_HA"       -- Total luas dalam hektar
FROM 
  "PL2024_AR_250K" a
INNER JOIN 
  "ADM_KAB_KOTA" b 
   --  ON a.shape && b.geom AND ST_Intersects(a.shape, b.geom)   -- bounding box filter dulu
    ON ST_Intersects(a.shape, b.geom)  -- Sudah cukup tanpa && karena ST_Intersects mencakup itu
LEFT JOIN 
  "KODE_PL" c 
    ON a."pl2024_id" = c."KD_PL"
WHERE 
  ST_IsValid(a.shape) 
  AND ST_IsValid(b.geom)
  --AND b."WADMPR" = 'Bali'
  AND b."WADMPR" ILIKE '%DKI%'
GROUP BY 
  a."pl2024_id",
  b."WADMPR",
  c."DESKRIPSI_PL",
  c."NOURUT_PL"
ORDER BY 
  c."NOURUT_PL";

### versi GEOM
-- ANALISA LUAS PERUNTUKAN LAHAN PER PROVINSI (JOIN KODEFIKSI + ADM_KAB_KOTA)
SELECT
  c."NOURUT_PL",                      -- Nomor urut dari master KODE_PL
  a."pl2024_id" AS "KODEPL",         -- Kode PL dari data PL2024
  b."WADMPR",                         -- Nama Provinsi dari batas administrasi
  c."DESKRIPSI_PL",                  -- Deskripsi PL dari referensi KODE_PL
  SUM(
    ST_Area(
      ST_Transform(
        ST_Intersection(a.geom, b.geom),
        54034                         -- ESRI Cylindrical Equal Area (meter)
      )
    )
  ) / 10000 AS "LUAS_CEA_HA"         -- Total luas hasil potongan (intersect) dalam hektar
FROM 
  "PL2024_AR_250K" a                 -- Layer peruntukan lahan
INNER JOIN 
  "ADM_KAB_KOTA" b                   -- Layer batas provinsi/kabupaten
    ON ST_Intersects(a.geom, b.geom) -- Intersect untuk pemotongan spasial
LEFT JOIN 
  "KODE_PL" c                        -- Tabel referensi kode PL
    ON a."pl2024_id" = c."KD_PL"
WHERE 
  ST_IsValid(a.geom)                -- Filter geometri valid
  AND ST_IsValid(b.geom)
  AND b."WADMPR" ILIKE '%DKI%'      -- Filter hanya untuk wilayah provinsi DKI
GROUP BY 
  a."pl2024_id",
  b."WADMPR",
  c."DESKRIPSI_PL",
  c."NOURUT_PL"
ORDER BY 
  c."NOURUT_PL";

--- Perbahan PL 2022-2024
SELECT
  pl22."pl2022_id",
  pl23."pl2023_id",
  pl24."pl2024_id",
  r."WADMPR",
  SUM(
    ST_Area(
      ST_Transform(
        ST_Intersection(
          ST_Intersection(
            ST_Intersection(pl22.geom, pl23.geom),
            pl24.geom
          ),
          r.geom
        ),
        54034
      )
    )
  ) / 10000 AS "LUAS_CEA_HA"
FROM 
  "PL2022_AR_250K" pl22
JOIN 
  "PL2023_AR_250K" pl23
    ON ST_Intersects(pl22.geom, pl23.geom)
JOIN 
  "PL2024_AR_250K" pl24
    ON ST_Intersects(pl23.geom, pl24.geom)
JOIN 
  "ADM_KAB_KOTA" r
    ON ST_Intersects(pl22.geom, r.geom)
   AND ST_Intersects(pl23.geom, r.geom)
   AND ST_Intersects(pl24.geom, r.geom)
WHERE r."WADMPR" ILIKE '%DKI%'  -- letakkan WHERE sebelum GROUP BY
GROUP BY    
  pl22."pl2022_id",
  pl23."pl2023_id",
  pl24."pl2024_id",
  r."WADMPR"
HAVING 
  SUM(
    ST_Area(
      ST_Transform(
        ST_Intersection(
          ST_Intersection(
            ST_Intersection(pl22.geom, pl23.geom),
            pl24.geom
          ),
          r.geom
        ),
        54034
      )
    )
  ) / 10000 != 0
ORDER BY 
  r."WADMPR",
  pl22."pl2022_id",
  pl23."pl2023_id",
  pl24."pl2024_id";
