####  POSTGIS  Luasan ## https://epsg.io/54034
SELECT * FROM extensions.spatial_ref_sys WHERE  auth_name='ESRI'
SELECT * FROM extensions.spatial_ref_sys WHERE auth_srid=54034
SELECT geom, ST_Area(geom::geography), ST_Area(ST_Transform(geom,54034))/10000 as "LUAS_CEA"
from "RUMPIN"

### LUASAN ####
##
SELECT "WADMPR", ST_Area(geom::geography), ST_Area(ST_Transform(geom,54034))/10000 as "LUAS_CEA"
from "ADM_KAB_KOTA" where "WADMPR"='Jawa Barat';

## Luas TOTAL
SELECT sum(ST_Area(ST_Transform(geom,54034)))/10000 as "LUAS_CEA"
            from "ADM_KAB_KOTA";

SELECT "WADMPR" ,sum(ST_Area(ST_Transform(geom,54034)))/10000 as "LUAS_CEA"
            from "ADM_KAB_KOTA" group by "WADMPR";
## ROUND
SELECT "WADMPR" ,round(sum(ST_Area(ST_Transform(geom,54034))))/10000 as "LUAS_CEA"
            from "ADM_KAB_KOTA" group by "WADMPR";

SELECT "FUNGSIKWS" ,sum(ST_Area(ST_Transform(geom,54034)))/10000 as "LUAS_CEA"
            from "KWSHUTAN_AR_250K_072024" group by "FUNGSIKWS";
####
Cek Proyeksi luasan SGRI:9478   CEA:54034
SELECT geom, ST_Area(geom::geography), ST_Area(ST_Transform(geom,9478))/10000 as "SRGI", ST_Area(ST_Transform(geom,54034))/10000 as "CEA"
from "RUMPIN"

SELECT sum(ST_Area(ST_Transform(geom,54034)))/10000 as "LUAS_CEA", sum(ST_Area(ST_Transform(geom,9478)))/10000 as "LUAS_SRGI", sum(ST_Area(geom::geography)) as "Luas GEO"
from "ADM_KAB_KOTA" where "WADMPR"='Jawa Barat' 


### OVERLAY ####
select st_intersection("KWSHUTAN_AR_250K_072024".geom,"ADM_KAB_KOTA".geom),
"FUNGSIKWS","WADMPR",st_astext(st_intersection("KWSHUTAN_AR_250K_072024".geom,"ADM_KAB_KOTA".geom)) as "JENIS GEOMETRY"
from "KWSHUTAN_AR_250K_072024","ADM_KAB_KOTA"
where not
st_isempty(st_intersection("KWSHUTAN_AR_250K_072024".geom,"ADM_KAB_KOTA".geom))
and "WADMPR"='Jawa Barat'
limit 10

## Luasan 2 Tema
# Intersection
   SELECT ST_Intersection(b.geom, sa.geom) AS clipped_geometry,
   "WADMPR"
    FROM "KWSHUTAN_AR_250K_072024" AS b, "ADM_KAB_KOTA" AS sa
    WHERE ST_Intersects(b.geom, sa.geom)
    and "WADMPR"='Bali';
#
select *,
ST_Intersection("KWSHUTAN_AR_250K_072024".geom,"ADM_KAB_KOTA".geom)
from "KWSHUTAN_AR_250K_072024","ADM_KAB_KOTA"
where not
st_isempty(st_intersection("KWSHUTAN_AR_250K_072024".geom,"ADM_KAB_KOTA".geom))
and "WADMPR"='Bali'

####
select "WADMPR" as "Provinsi","FUNGSIKWS" as "Fungsi Kawasan",
sum(ST_Area(ST_Transform(ST_Intersection("KWSHUTAN_AR_250K_072024".geom,"ADM_KAB_KOTA".geom),54034)))/10000 as "LUAS_CEA"
from "KWSHUTAN_AR_250K_072024","ADM_KAB_KOTA"
where not
st_isempty(st_intersection("KWSHUTAN_AR_250K_072024".geom,"ADM_KAB_KOTA".geom))
and "WADMPR"='Bali'
group by "WADMPR","FUNGSIKWS"
order by "FUNGSIKWS"

atau
select "WADMPR" as "Provinsi","FUNGSIKWS" as "Fungsi Kawasan",
sum(ST_Area(ST_Transform(ST_Intersection("KWSHUTAN_AR_250K_072024".geom,"ADM_KAB_KOTA".geom),54034)))/10000 as "LUAS_CEA"
from "KWSHUTAN_AR_250K_072024","ADM_KAB_KOTA"
where st_intersects("KWSHUTAN_AR_250K_072024".geom,"ADM_KAB_KOTA".geom)
and "WADMPR"='Bali'
group by "WADMPR","FUNGSIKWS"
order by "FUNGSIKWS"

*** kalau mau disimpan ke tabel baru == > CREATE TABLE tabel_luas_kwsbali AS
select "WADMPR","FUNGSIKWS",
sum(ST_Area(ST_Transform(ST_intersection(a.geom, b.geom),54034)))/10000 as "LUAS_CEA"
from "KWSHUTAN_AR_250K_072024" a, "ADM_KAB_KOTA" b
where ST_Intersects (a.geom,b.geom)
and "WADMPR"='Bali'
group by "WADMPR","FUNGSIKWS"
*** baru di joinkan denganklasifikasi Fungsi
SELECT *
FROM tabel_luas_kwsbali a
LEFT JOIN "KODE_KWS"
ON a."FUNGSIKWS"="KODE_KWS"."KD_KWS"

##TOTAL
select sum(ST_Area(ST_Transform(ST_Intersection("KWSHUTAN_AR_250K_072024".geom,"ADM_KAB_KOTA".geom),54034)))/10000 as "LUAS_CEA"
from "KWSHUTAN_AR_250K_072024","ADM_KAB_KOTA"
where not
st_isempty(st_intersection("KWSHUTAN_AR_250K_072024".geom,"ADM_KAB_KOTA".geom))
and "WADMPR"='Bali'

## Analisa Luas Kawasan Hutan Provinsi + Join Kodefiksi
SELECT 
  a."FUNGSIKWS" AS "KODEKWS",b."WADMPR",c."FUNGSI_KWS",
  SUM(
    ST_Area(
      ST_Transform(
        ST_Intersection(a.geom, b.geom), 
        54034
      )
    )
  )/10000 AS "LUAS_CEA_HA"
FROM 
  "KWSHUTAN_AR_250K_072024" a
INNER JOIN 
  "ADM_KAB_KOTA" b 
    ON ST_Intersects(a.geom, b.geom)
LEFT JOIN 
  "KODE_KWS" c ON a."FUNGSIKWS"=c."KD_KWS"
WHERE 
  ST_IsValid(a.geom) AND ST_IsValid(b.geom)
  and "WADMPR"='Bali'
GROUP BY 
  a."FUNGSIKWS",
  b."WADMPR",
  c."FUNGSI_KWS";
####

### JOIN TABLE
Jenis JOIN
- INNER JOIN
- LEFT JOIN
- RIGHT JOIN
- FULL OUTER JOIN
###
SELECT "KWSHUTAN_AR_250K_072024"."FUNGSIKWS","KODE_KWS"."FUNGSI_KWS"
FROM "KWSHUTAN_AR_250K_072024"
INNER JOIN "KODE_KWS"
ON "KWSHUTAN_AR_250K_072024"."FUNGSIKWS"="KODE_KWS"."KD_KWS"

Luas CEA
SELECT "FUNGSIKWS","KODE_KWS"."FUNGSI_KWS",
ST_Area(ST_Transform(geom,54034))/10000 as "LUAS_CEA"
FROM "KWSHUTAN_AR_250K_072024" a
LEFT JOIN "KODE_KWS"
ON a."FUNGSIKWS"="KODE_KWS"."KD_KWS"

#
SELECT "FUNGSIKWS","KODE_KWS"."FUNGSI_KWS",
sum(ST_Area(ST_Transform(geom,54034)))/10000 as "LUAS_CEA"
FROM "KWSHUTAN_AR_250K_072024" a
LEFT JOIN "KODE_KWS"
ON a."FUNGSIKWS"="KODE_KWS"."KD_KWS"
group by "FUNGSIKWS","FUNGSI_KWS"

## PIVOT TABEL
Cara 1:
select
  user_id,
  sum(case when category = 'Food' then amount else 0 end) as food_amount,
  sum(case when category = 'Travel' then amount else 0 end) as travel_amount
from
  transactions
group by
  user_id
  order by user_id;

Cara 2: Aktifkan Extension tablefunc 
    -- create extension if not exists tablefunc;
SELECT *
FROM crosstab(
  $$
    SELECT user_id, category, amount
    FROM transactions
    ORDER BY 1, 2
  $$,
  $$ SELECT DISTINCT category FROM transactions ORDER BY 1 $$
) AS ct(user_id int, food_amount int, travel_amount int);
